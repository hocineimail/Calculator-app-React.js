{"version":3,"sources":["App.js","components/Buttons.js","components/Result.js","serviceWorker.js","index.js"],"names":["App","state","result","onClick","button","console","log","_this","calculate","reset","backspace","setState","eval","e","slice","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_Result__WEBPACK_IMPORTED_MODULE_8__","this","_components_Buttons__WEBPACK_IMPORTED_MODULE_7__","Component","Buttons","style","width","name","props","target","Result","height","backgroundColor","color","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6ff63c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Buttons from './components/Buttons'\nimport Result from './components/Result'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nclass App extends Component {\n\n\n    state = {\n        result: \"\"\n    }\n\n\nonClick = button => {\nconsole.log(button)\n    if(button === \"=\"){\n        this.calculate()\n    }\n\n    else if(button === \"C\"){\n        this.reset()\n    }\n    else if(button === \"CE\"){\n        this.backspace()\n    }\n    \n    else {\n     \n        this.setState({\n            result: this.state.result + button\n        }) }\n    \n};\n\n\ncalculate = () => {\n    try {\n        this.setState({\n            // eslint-disable-next-line\n            result: (eval(this.state.result) || \"\" ) + \"\"\n        })\n    } catch (e) {\n        this.setState({\n            result: \"error\"\n        })\n\n    }\n};\n\nreset = () => {\n    this.setState({\n        result: \"\"\n    })\n};\n\nbackspace = () => {\n    this.setState({\n        result: this.state.result.slice(0, -1)\n    })\n};\n\nrender() {\n    return (\n        <div>\n           <header className=\"App-header\">\n            <div className=\"calculator-body\">\n                <h2> Calculator</h2>\n                <Result result={this.state.result}/>\n                <Buttons onClick={this.onClick}/>\n            </div>\n            </header>\n        </div>\n  \n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\n\n class Buttons extends Component {\n  render() {\n    return (\n        <div >\n        <button className=\"bnt btn-success\" style={{ width: '100px'}}  name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}}  name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>CE</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button><br/>\n  \n  \n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button><br/>\n  \n  \n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button><br/>\n  \n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button><br/>\n  \n  \n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\n        <button className=\"bnt btn-success\" style={{ width: '100px'}} name=\"/\" onClick={e => this.props.onClick(e.target.name)}>รท</button><br/>\n    </div>\n    )\n  }\n}\nexport default Buttons;","import React, { Component } from 'react'\n\nexport default class Result extends Component {\n  render() {\n\n         let {result} = this.props;\n    return (\n         <div className=\"result\" style={{ width: '400px',height: '50px', backgroundColor: '#fff'}}>\n         <p style={{color: 'black'}}>{result}</p>\n         </div>\n     \n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}